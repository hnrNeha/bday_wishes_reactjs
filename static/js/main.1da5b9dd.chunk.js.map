{"version":3,"sources":["githubLogo.svg","Wish.jsx","Countdown.jsx","Birthday.jsx","RouterBirthday.jsx","Generate.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wish","_ref","name","react_default","a","createElement","className","toUpperCase","Countdown","countdownData","isItBday","src_Wish","days","hours","minutes","seconds","Birthday","day","month","_useState","useState","_useState2","Object","slicedToArray","state","setState","undefined","currentTime","Date","currentYear","getFullYear","getDate","getMonth","useEffect","setInterval","prevState","objectSpread","dateAtm","birthdayDay","getTime","timeRemaining","Math","floor","countdown","monthBday","src_Countdown","Fragment","href","src","githubLogo","alt","react_router_dom","to","RouterBirthday","props","params","match","src_Birthday","Generate","setName","_useState3","_useState4","setDay","_useState5","_useState6","setMonth","_useState7","_useState8","link","setLink","type","placeholder","value","onChange","e","target","max","min","selected","onClick","concat","App","react_router","exact","path","component","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1da5b9dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/githubLogo.90118e04.svg\";","import React from 'react';\n\nconst Wish = ({ name }) => {\n  return (\n    <div className='wish-message'>\n      HAPPY BIRTHDAY <span className='highlight'>{name.toUpperCase()}</span> !!!\n    </div>\n  );\n};\n\nexport default Wish;\n","import React from 'react';\nimport Wish from './Wish';\n\nconst Countdown = ({ countdownData, name }) => {\n  if (!countdownData.isItBday) {\n    return (\n      <div>\n        <h1 className='heading'>\n          Countdown to <span className='highlight'>{name}'s</span> Birthday\n        </h1>\n        <div className='countdown-wrapper'>\n          <div className='countdown-box'>\n            {countdownData.days}\n            <span className='legend'>Days</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.hours}\n            <span className='legend'>Hours</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.minutes}\n            <span className='legend'>Minutes</span>\n          </div>\n          <div className='countdown-box'>\n            {countdownData.seconds}\n            <span className='legend'>Seconds</span>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Wish name={name} />;\n  }\n};\n\nexport default Countdown;\n","import React, { useState, useEffect } from 'react';\nimport Countdown from './Countdown';\nimport githubLogo from './githubLogo.svg';\nimport { Link } from 'react-router-dom';\n\nconst Birthday = ({ name, day, month }) => {\n  // useState Hooks\n  const [state, setState] = useState({\n    seconds: 0,\n    hours: 0,\n    minutes: 0,\n    days: 0,\n    isItBday: false,\n  });\n\n  if (name === undefined || day === undefined || month === undefined) {\n    // This is if not enough params are provided\n    name = 'Neha'; // Name of the Person\n    month = 1; // Month of the Birthday\n    day = 10; // Day of the Birthday\n  }\n\n  // get current time\n  const currentTime = new Date();\n  // get current year\n  const currentYear = currentTime.getFullYear();\n\n  // Getting the Birthday in Data Object\n  // WE subtract 1 from momnth ; Months start from 0 in Date Object\n  // Bithday Boolean\n  const isItBday =\n    currentTime.getDate() === day && currentTime.getMonth() === month - 1;\n\n  useEffect(() => {\n    setInterval(() => {\n      const countdown = () => {\n        // Getting the Current Date\n        const dateAtm = new Date();\n\n        // if the Birthday has passed\n        // then set the Birthday countdown for next year\n        let birthdayDay = new Date(currentYear, month - 1, day);\n        if (dateAtm > birthdayDay) {\n          birthdayDay = new Date(currentYear + 1, month - 1, day);\n        } else if (dateAtm.getFullYear() === birthdayDay.getFullYear() + 1) {\n          birthdayDay = new Date(currentYear, month - 1, day);\n        }\n\n        // Getitng Current Time\n        const currentTime = dateAtm.getTime();\n        // Getting Birthdays Time\n        const birthdayTime = birthdayDay.getTime();\n\n        // Time remaining for the Birthday\n        const timeRemaining = birthdayTime - currentTime;\n\n        let seconds = Math.floor(timeRemaining / 1000);\n        let minutes = Math.floor(seconds / 60);\n        let hours = Math.floor(minutes / 60);\n        let days = Math.floor(hours / 24);\n\n        seconds %= 60;\n        minutes %= 60;\n        hours %= 24;\n\n        // Setting States\n        setState((prevState) => ({\n          ...prevState,\n          seconds,\n          minutes,\n          hours,\n          days,\n          isItBday,\n        }));\n        // console.log(`${days}:${hours}:${minutes}:${seconds} , ${isItBday}`);\n      };\n      if (!isItBday) {\n        countdown();\n      } else {\n        setState((prevState) => ({\n          ...prevState,\n          isItBday: true,\n        }));\n      }\n    }, 1000);\n  }, [currentYear, day, isItBday, month]);\n\n  let birth = new Date(currentYear, month - 1, day);\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  let monthBday = monthNames[birth.getMonth()];\n\n  return (\n    <div className='page'>\n      <Countdown countdownData={state} name={name} />\n      {!isItBday && (\n        <>\n          <div className='birthdate'>\n            Birth-Date: {day} {monthBday} {currentYear}\n          </div>\n          <div className='credits'>\n            <a href='https://github.com/Deep-Codes'>\n              <img src={githubLogo} alt='Github-Logo' className='github-logo' />\n            </a>\n          </div>\n          <Link to='/generate'>Generate Here</Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Birthday;\n","import React from 'react';\nimport Birthday from './Birthday';\n\nconst RouterBirthday = (props) => {\n  const { params } = props.match;\n  const { name, day, month } = params;\n  return (\n    <>\n      <Birthday name={name} month={month} day={day} />\n    </>\n  );\n};\n\nexport default RouterBirthday;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Generate = () => {\n  const [name, setName] = useState('');\n  const [day, setDay] = useState(1);\n  const [month, setMonth] = useState(1);\n  const [link, setLink] = useState('');\n  const generateLink = () => {\n    setLink(\n      `https://birthday-wisher.netlify.app/birthday/${name}/${day}/${month}`\n    );\n  };\n  return (\n    <div className='page'>\n      <h1>Generate Here</h1>\n      <div className='form'>\n        <input\n          type='text'\n          placeholder='Enter Name'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type='number'\n          placeholder='Enter Day'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n          max={31}\n          min={1}\n        />\n        <select value={month} onChange={(e) => setMonth(e.target.value)}>\n          <option value=''>Select Month</option>\n          <option selected value='1'>\n            January\n          </option>\n          <option value='2'>February</option>\n          <option value='3'>March</option>\n          <option value='4'>April</option>\n          <option value='5'>May</option>\n          <option value='6'>June</option>\n          <option value='7'>July</option>\n          <option value='8'>August</option>\n          <option value='9'>September</option>\n          <option value='10'>October</option>\n          <option value='11'>November</option>\n          <option value='12'>December</option>\n        </select>\n      </div>\n      <button className='btn' onClick={() => generateLink()}>\n        Generate Link\n      </button>\n\n      {link !== '' ? (\n        <>\n          <p className='gen-link'>{link}</p>\n          <Link to={`birthday/${name}/${day}/${month}`}>\n            <button className='btn'>Visit Link</button>\n          </Link>\n        </>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nexport default Generate;\n","import React from 'react';\nimport './App.css';\nimport Birthday from './Birthday';\nimport { Route, Switch } from 'react-router-dom';\nimport RouterBirthday from './RouterBirthday';\nimport Generate from './Generate';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/' component={Birthday} />\n        <Route\n          exact\n          path='/birthday/:name?/:day?/:month?'\n          component={RouterBirthday}\n        />\n        <Route exact path='/generate' component={Generate} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}